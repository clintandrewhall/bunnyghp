{"version":3,"sources":["commands/github.ts","App.tsx","commands/help.ts","commands/google.ts","commands/index.ts","reportWebVitals.ts","index.tsx"],"names":["pri","type","plural","REPO","ASSET","NUMBER","routes","path","url","example","desc","query","repo","defaultRepo","defaultPerson","asset","number","person","me","github","commands","definitions","parsed","map","matcher","match","delimiter","getUrl","result","params","find","getCommands","helps","App","URLSearchParams","window","location","search","get","useQuery","useState","currentQuery","setCurrentQuery","route","setRoute","useEffect","open","className","action","method","name","value","onChange","e","target","autoComplete","item","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38ab4a0a.chunk.js","sourcesContent":["import { CommandDefinition, CommandCreator } from '.';\n\nconst pri = (type: string, plural = false) => {\n  switch (type) {\n    case 'pr':\n      return 'pull';\n    case 'issue':\n    case 'i':\n      return plural ? 'issues' : 'issue';\n    default:\n      return '';\n  }\n};\n\nconst PERSON = `:person([a-zA-Z0-9_]+)`;\nconst REPO = `:repo(\\\\w+\\/\\\\w+)`;\nconst ASSET = `:asset(pr|issue|i)`;\nconst NUMBER = `:number(\\\\d+)`;\n\nconst person: CommandCreator = () => [\n  {\n    path: `gh ${PERSON}`,\n    url: ({ person }) => `https://github.com/${person}`,\n    example: 'gh johndoe',\n    desc: \"Go to a person's Github profile.\",\n  },\n];\n\nconst me: CommandCreator = (person) => [\n  {\n    path: `gh me`,\n    url: () => `https://github.com/${person}`,\n    desc: 'Go to your Github profile.',\n  },\n  {\n    path: `gh i`,\n    url: () =>\n      `https://github.com/issues?q=is%3Aissue+is%3Aopen+author%3A${person}+archived%3Afalse+sort%3Aupdated-desc`,\n    desc: 'Go to your open issues.',\n  },\n  {\n    path: `gh pr`,\n    url: () =>\n      `https://github.com/pulls?q=is%3Apr+is%3Aopen+author%3A${person}+archived%3Afalse+sort%3Aupdated-desc`,\n    desc: 'Go to your open pull requests.',\n  },\n];\n\nconst repo: CommandCreator = (repo) => [\n  {\n    path: `gh ${ASSET} ${NUMBER}`,\n    url: ({ asset, number }) =>\n      `https://github.com/${repo}/${pri(asset)}/${number}`,\n    example: 'gh pr|i|issue 123',\n    desc: 'Go to a Github issue or pull request by number.',\n  },\n  {\n    path: `gh ${NUMBER}`, // GH will resolve if item is a pull\n    url: ({ number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh 123',\n    desc: 'Go to a Github issue or pull request by number.',\n  },\n  {\n    path: `gh r ${ASSET}`,\n    url: ({ asset }) =>\n      `https://github.com/${repo}/${pri(asset, true)}?q=is%3A${pri(\n        asset,\n      )}+is%3Aopen+sort%3Aupdated-desc`,\n    example: 'gh r pr|i|issue',\n    desc: `Go to ${repo} open issues or pull requests.`,\n  },\n  {\n    path: `gh r ${NUMBER}`, // GH will resolve if item is a pull\n    url: ({ number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh r 123',\n    desc: `Go to ${repo} open issue or pull request by number.`,\n  },\n  {\n    path: `gh r`,\n    url: () => `https://github.com/${repo}`,\n    desc: `Go to ${repo}.`,\n  },\n];\n\nconst standard: CommandCreator = () => [\n  {\n    path: `gh ${REPO} ${ASSET} ${NUMBER}`,\n    url: ({ repo, asset, number }) =>\n      `https://github.com/${repo}/${pri(asset, true)}/${number}`,\n    example: 'gh johndoe/repo pr|i|issue 123',\n    desc: \"Go to a repo's Github issue or pull request by number.\",\n  },\n  {\n    path: `gh ${REPO} ${NUMBER}`, // GH will resolve if item is a pull\n    url: ({ repo, number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh johndoe/repo 123',\n    desc: \"Go to a repo's Github issue or pull request by number.\",\n  },\n  {\n    path: `gh ${REPO} ${ASSET}`,\n    url: ({ repo, asset }) =>\n      `https://github.com/${repo}/${pri(asset, true)}?q=is%3A${pri(\n        asset,\n      )}+is%3Aopen+sort%3Aupdated-desc`,\n    example: 'gh johndoe/repo pr|i|issue',\n    desc: \"Go to a repo's Github issues or pull requests.\",\n  },\n  {\n    path: `gh ${REPO}`, // GH will resolve if item is a pull\n    url: ({ repo }) => `https://github.com/${repo}`,\n    example: 'gh johndoe/repo',\n    desc: 'Go to a Github repository.',\n  },\n];\n\nexport interface Params {\n  defaultRepo?: string;\n  defaultPerson?: string;\n}\n\nexport const github = ({\n  defaultRepo,\n  defaultPerson,\n}: Params): CommandDefinition[] => {\n  let routes = [\n    ...standard(),\n    ...person(),\n    {\n      path: `gh`,\n      url: () => `https://github.com`,\n      desc: 'Go to Github.',\n    },\n  ];\n\n  if (defaultRepo) {\n    routes = [...repo(defaultRepo), ...routes];\n  }\n\n  if (defaultPerson) {\n    routes = [...me(defaultPerson), ...routes];\n  }\n\n  return routes;\n};\n","import { useEffect, useState, Fragment } from 'react';\n\nimport { github, google, help, getCommands, getHelp } from './commands';\n\nconst useQuery = () => {\n  return new URLSearchParams(window.location?.search).get('q') || '';\n};\n\n// hackity hackity\nconst routes = [\n  ...help(),\n  ...google(),\n  ...github({\n    defaultPerson: 'clintandrewhall',\n    defaultRepo: 'elastic/kibana',\n  }),\n];\n\nconst commands = getCommands(routes);\nconst helps = getHelp(routes);\n\nexport const App = () => {\n  const query = useQuery();\n  const [currentQuery, setCurrentQuery] = useState(query);\n  const [route, setRoute] = useState(commands(currentQuery));\n\n  // hackity hackity\n  useEffect(() => {\n    if (query && route) {\n      window.open(route, '_bunnyghp');\n    }\n  }, []);\n\n  // hackity hackity\n  useEffect(() => {\n    setRoute(commands(currentQuery));\n  }, [routes, currentQuery]);\n\n  return (\n    <div className=\"App\">\n      <form action=\"/\" method=\"GET\">\n        <input\n          type=\"text\"\n          name=\"q\"\n          value={currentQuery}\n          onChange={(e) => setCurrentQuery(e.target.value)}\n          autoComplete=\"off\"\n        />\n        <input type=\"submit\" />\n      </form>\n      <p>{route || <br />}</p>\n      <dl>\n        {helps.map((item, key) => (\n          <Fragment key={'f' + key}>\n            <dt key={`dt-${key}`}>\n              <code>{item.example}</code>\n            </dt>\n            <dd key={`dd-${key}`}>{item.desc}</dd>\n          </Fragment>\n        ))}\n      </dl>\n    </div>\n  );\n};\n","import { CommandDefinition } from '.';\n\nexport const help: () => CommandDefinition[] = () => [\n  {\n    path: ':help(h|help|home)',\n    url: () => `/`,\n    example: 'h|help|home',\n    desc: 'View how to use bunnyghp.',\n  },\n];\n","import { CommandDefinition } from '.';\n\nexport const google: () => CommandDefinition[] = () => [\n  {\n    path: 'g :query',\n    url: ({ query }) => `https://www.google.com/search?q=${query}`,\n    example: 'g how to google',\n    desc: 'Search Google',\n  },\n];\n","import { MatchFunction, match } from 'path-to-regexp';\n\nexport { github } from './github';\nexport { google } from './google';\nexport { help } from './help';\n\nexport interface CommandDefinition {\n  path: string;\n  url: (match: Record<string, string>) => string;\n  example?: string;\n  desc: string;\n}\n\nexport interface Matcher {\n  match: MatchFunction;\n  getUrl: (match: Record<string, string>) => string;\n}\n\nexport type CommandCreator = (...params: string[]) => CommandDefinition[];\n\nexport const getCommands = (definitions: CommandDefinition[]) => {\n  const parsed = definitions.map(({ path, url }) => {\n    const matcher = match(path, {\n      delimiter: ' ',\n    });\n\n    const getUrl = (query: string) => {\n      const result = matcher(query);\n\n      if (result) {\n        return url(result.params as Record<string, string>);\n      }\n      return null;\n    };\n\n    return {\n      match: matcher,\n      getUrl,\n    };\n  });\n\n  return (query: string) => {\n    const result = parsed.find(({ match }) => match(query));\n\n    return result?.getUrl(query);\n  };\n};\n\nexport const getHelp = (definitions: CommandDefinition[]) =>\n  definitions.map(({ path, example, desc }) => ({\n    example: example || path,\n    desc,\n  }));\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}