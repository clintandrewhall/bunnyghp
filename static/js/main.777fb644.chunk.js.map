{"version":3,"sources":["commands/github.ts","commands/index.ts","components/command_list.tsx","components/input_form.tsx","components/home.tsx","App.tsx","commands/help.ts","commands/google.ts","commands/classic.ts","index.tsx"],"names":["pri","type","plural","REPO","ASSET","NUMBER","person","template","toUrl","example","desc","me","repo","asset","number","standard","github","defaultRepo","defaultPerson","definitions","options","delimiter","OPTIONAL_SPACE","QUERY","CommandList","commands","map","item","key","InputForm","registry","query","useState","currentQuery","setCurrentQuery","action","method","name","value","onChange","e","target","autoComplete","Home","className","match","templateMatch","result","params","find","createRegistry","process","zip","App","path","location","pathname","URLSearchParams","window","search","get","useLocation","replace","startsWith","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.777fb644.chunk.js","sourcesContent":["import { CommandDefinition, CommandFn } from '../types';\n\nconst pri = (type: string, plural = false) => {\n  switch (type) {\n    case 'pr':\n      return 'pull';\n    case 'issue':\n    case 'i':\n      return plural ? 'issues' : 'issue';\n    default:\n      return '';\n  }\n};\n\nconst PERSON = `:person([a-zA-Z0-9_]+)`;\nconst REPO = `:repo(\\\\w+\\/\\\\w+)`;\nconst ASSET = `:asset(pr|issue|i)`;\nconst NUMBER = `:number(\\\\d+)`;\n\nconst person: CommandFn = () => [\n  {\n    template: `gh ${PERSON}`,\n    toUrl: ({ person }) => `https://github.com/${person}`,\n    example: 'gh johndoe',\n    desc: \"Go to a person's Github profile.\",\n  },\n];\n\nconst me: CommandFn = (person) => [\n  {\n    template: `gh me`,\n    toUrl: () => `https://github.com/${person}`,\n    desc: 'Go to your Github profile.',\n  },\n  {\n    template: `gh i`,\n    toUrl: () =>\n      `https://github.com/issues?q=is%3Aissue+is%3Aopen+author%3A${person}+archived%3Afalse+sort%3Aupdated-desc`,\n    desc: 'Go to your open issues.',\n  },\n  {\n    template: `gh pr`,\n    toUrl: () =>\n      `https://github.com/pulls?q=is%3Apr+is%3Aopen+author%3A${person}+archived%3Afalse+sort%3Aupdated-desc`,\n    desc: 'Go to your open pull requests.',\n  },\n];\n\nconst repo: CommandFn = (repo) => [\n  {\n    template: `gh ${ASSET} ${NUMBER}`,\n    toUrl: ({ asset, number }) =>\n      `https://github.com/${repo}/${pri(asset)}/${number}`,\n    example: 'gh pr|i|issue 123',\n    desc: 'Go to a Github issue or pull request by number.',\n  },\n  {\n    template: `gh ${NUMBER}`, // GH will resolve if item is a pull\n    toUrl: ({ number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh 123',\n    desc: 'Go to a Github issue or pull request by number.',\n  },\n  {\n    template: `gh r ${ASSET}`,\n    toUrl: ({ asset }) =>\n      `https://github.com/${repo}/${pri(asset, true)}?q=is%3A${pri(\n        asset,\n      )}+is%3Aopen+sort%3Aupdated-desc`,\n    example: 'gh r pr|i|issue',\n    desc: `Go to ${repo} open issues or pull requests.`,\n  },\n  {\n    template: `gh r ${NUMBER}`, // GH will resolve if item is a pull\n    toUrl: ({ number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh r 123',\n    desc: `Go to ${repo} open issue or pull request by number.`,\n  },\n  {\n    template: `gh r`,\n    toUrl: () => `https://github.com/${repo}`,\n    desc: `Go to ${repo}.`,\n  },\n];\n\nconst standard: CommandFn = () => [\n  {\n    template: `gh ${REPO} ${ASSET} ${NUMBER}`,\n    toUrl: ({ repo, asset, number }) =>\n      `https://github.com/${repo}/${pri(asset, true)}/${number}`,\n    example: 'gh johndoe/repo pr|i|issue 123',\n    desc: \"Go to a repo's Github issue or pull request by number.\",\n  },\n  {\n    template: `gh ${REPO} ${NUMBER}`, // GH will resolve if item is a pull\n    toUrl: ({ repo, number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh johndoe/repo 123',\n    desc: \"Go to a repo's Github issue or pull request by number.\",\n  },\n  {\n    template: `gh ${REPO} ${ASSET}`,\n    toUrl: ({ repo, asset }) =>\n      `https://github.com/${repo}/${pri(asset, true)}?q=is%3A${pri(\n        asset,\n      )}+is%3Aopen+sort%3Aupdated-desc`,\n    example: 'gh johndoe/repo pr|i|issue',\n    desc: \"Go to a repo's Github issues or pull requests.\",\n  },\n  {\n    template: `gh ${REPO}`, // GH will resolve if item is a pull\n    toUrl: ({ repo }) => `https://github.com/${repo}`,\n    example: 'gh johndoe/repo',\n    desc: 'Go to a Github repository.',\n  },\n];\n\nconst basic = () => [\n  {\n    template: `gh`,\n    toUrl: () => `https://github.com`,\n    desc: 'Go to Github.',\n  },\n];\n\nconst all = ({\n  defaultRepo,\n  defaultPerson,\n}: {\n  defaultRepo?: string;\n  defaultPerson?: string;\n}): CommandDefinition[] => {\n  let definitions = [...standard(), ...person()];\n\n  if (defaultRepo) {\n    definitions = [...repo(defaultRepo), ...definitions];\n  }\n\n  if (defaultPerson) {\n    definitions = [...me(defaultPerson), ...definitions];\n  }\n\n  return [...definitions, ...basic()];\n};\n\nexport const github = { all, standard, person, repo, me, basic };\n","import { match as templateMatch } from 'path-to-regexp';\nimport { CommandRegistry, CommandDefinition } from '../types';\n\nexport { github } from './github';\nexport { google } from './google';\nexport { help } from './help';\nexport { classic } from './classic';\n\nconst options = {\n  delimiter: ' ?',\n};\n\nexport const OPTIONAL_SPACE = '( |$)';\nexport const QUERY = `${OPTIONAL_SPACE}:query(.+)?`;\n\nexport const createRegistry = (\n  definitions: CommandDefinition[],\n): CommandRegistry => {\n  const commands = definitions.map(({ template, toUrl, example, desc }) => {\n    const match = templateMatch(template, options);\n\n    return {\n      match,\n      toUrl: (query: string) => {\n        const result = match(query);\n\n        if (result) {\n          return toUrl(result.params as Record<string, string>);\n        }\n\n        return false;\n      },\n      example: example || template,\n      desc,\n    };\n  });\n\n  return {\n    commands,\n    toUrl: (query: string) =>\n      commands.find(({ match }) => match(query))?.toUrl(query) || false,\n  };\n};\n","import { Fragment } from 'react';\nimport { Command } from '../types';\n\ninterface Props {\n  commands: Command[];\n}\n\nexport const CommandList = ({ commands }: Props) => {\n  return (\n    <dl>\n      {commands.map((item, key) => (\n        <Fragment key={'f' + key}>\n          <dt key={`dt-${key}`}>\n            <code>{item.example}</code>\n          </dt>\n          <dd key={`dd-${key}`}>{item.desc}</dd>\n        </Fragment>\n      ))}\n    </dl>\n  );\n};\n","import { useState } from 'react';\nimport { CommandRegistry } from '../types';\n\ninterface Props {\n  query: string;\n  registry: CommandRegistry;\n}\n\nexport const InputForm = ({ registry, query }: Props) => {\n  const [currentQuery, setCurrentQuery] = useState(query);\n\n  return (\n    <div>\n      <form action=\"/\" method=\"GET\">\n        <input\n          type=\"text\"\n          name=\"q\"\n          value={currentQuery}\n          onChange={(e) => setCurrentQuery(e.target.value)}\n          autoComplete=\"off\"\n        />\n        <input type=\"submit\" />\n      </form>\n      <p>{registry.toUrl(currentQuery) || <br />}</p>\n    </div>\n  );\n};\n","import { CommandList } from '.';\nimport { CommandRegistry } from '../types';\nimport { InputForm } from './input_form';\n\ninterface Props {\n  query: string;\n  registry: CommandRegistry;\n}\n\nexport const Home = ({ registry, query }: Props) => {\n  return (\n    <div>\n      <div className=\"App\">\n        <InputForm {...{ registry, query }} />\n        <CommandList commands={registry.commands} />\n      </div>\n    </div>\n  );\n};\n","import { github, google, help, createRegistry, classic } from './commands';\nimport { Home } from './components';\n\nconst useLocation = () => ({\n  path: location.pathname,\n  query: new URLSearchParams(window.location?.search).get('q') || '',\n});\n\n// hackity hackity\nconst definitions = [\n  ...help(),\n  ...google(),\n  ...github.all({\n    // TODO: also allow for local storage\n    defaultPerson: process.env.REACT_APP_GITHUB_DEFAULT_PERSON,\n    defaultRepo: process.env.REACT_APP_GITHUB_DEFAULT_REPO,\n  }),\n  ...classic(),\n];\n\nconst registry = createRegistry(definitions);\n\nexport const App = () => {\n  const { path, query } = useLocation();\n\n  // All of this feels clunky, but it works for now.\n  if (path === '/' && query) {\n    window.location.replace(registry.toUrl(query) || '/');\n    return null;\n  }\n\n  // Feels clunky, but it works.\n  if (path.startsWith('/home') || path === '/') {\n    return <Home {...{ registry, query }} />;\n  }\n\n  window.location.replace('/');\n  return null;\n};\n","import { CommandDefinition } from '../types';\n\nexport const help: () => CommandDefinition[] = () => [\n  {\n    template: ':help(h|help|home)',\n    toUrl: () => `/`,\n    example: 'h|help|home',\n    desc: 'View how to use bunnyghp.',\n  },\n];\n","import { CommandDefinition } from '../types';\nimport { QUERY } from '.';\n\nexport const google: () => CommandDefinition[] = () => [\n  {\n    template: `g${QUERY}`,\n    toUrl: ({ query }) =>\n      `https://www.google.com${query ? `/search?q=${query}` : ''}`,\n    example: 'g how to google',\n    desc: 'Search Google, or just go to Google.',\n  },\n];\n","import { CommandDefinition } from '../types';\nimport { OPTIONAL_SPACE, QUERY } from '.';\n\nconst ZIP_CODE = `:zip(\\\\d{5})`;\n\nexport const classic: () => CommandDefinition[] = () => [\n  {\n    template: 'lol',\n    toUrl: () => 'http://icanhascheezburger.com/?random',\n    desc: 'a random lolcat',\n  },\n  {\n    template: 'hoo :query',\n    toUrl: ({ query }) => `http://haskell.org/hoogle/?q=${query}`,\n    example: 'hoo how to hoogle',\n    desc: 'a hoogle (haskell + google) search',\n  },\n  {\n    template: 'rickroll',\n    toUrl: () => 'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n    desc: \"You Just Got Rick Roll'd By bunnyghp!\",\n  },\n  {\n    template: `fb${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.facebook.com/${query ? `s.php?q=${query}&init=q` : ''}`,\n    desc: 'search www.facebook.com or go there',\n    example: 'fb mark zuckerberg',\n  },\n  {\n    template: `yt${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.youtube.com/${\n        query ? `results?search_query=${query}&search_type=&aq=-1&oq=` : ''\n      }`,\n    desc: 'searches YouTube or goes to it',\n    example: \"yt i'm cool sushi 654 yeah\",\n  },\n  {\n    template: `bugcongress${OPTIONAL_SPACE}${ZIP_CODE}?`,\n    toUrl: ({ zip }) =>\n      `http://www.congress.org/congressorg/officials/congress/${\n        zip ? `?lvl=C&azip=${zip}` : ''\n      }`,\n    desc: 'looks up your senator or congressperson based on a zip code you give it, or just view a list',\n    example: 'bugcongress 40207',\n  },\n  {\n    template: `wa${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.wolframalpha.com${query ? `/input/?i=${query}` : ''}`,\n    desc: 'searches Wolfram Alpha or goes there',\n    example: 'wa ultimate question',\n  },\n  {\n    template: `wikinvest${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.wikinvest.com${\n        query ? `/Special/Search?search=%s${query}` : ''\n      }`,\n    desc: 'searches Wikinvest or goes there',\n    example: 'wikinvest 2008 Financial Crisis',\n  },\n  {\n    template: 'time',\n    toUrl: () => 'https://time.is/',\n    desc: 'shows the current time',\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}