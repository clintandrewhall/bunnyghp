{"version":3,"sources":["constants.ts","commands/github.ts","commands/index.ts","commands/help.ts","config.ts","commands/kibana.ts","commands/google.ts","commands/classic.ts","components/command_list.tsx","components/input_form.tsx","components/home.tsx","App.tsx","index.tsx"],"names":["ROOT","process","HELP","ASSET","pri","type","plural","personCommands","template","PERSON","toUrl","person","example","desc","me","repoCommands","repo","NUMBER","asset","number","standard","REPO","github","params","definitions","options","delimiter","OPTIONAL_SPACE","QUERY","sortCommandDefinitions","a","b","split","createRegistry","commands","map","match","templateMatch","query","result","find","getDefinitions","release","team","sort","kibana","zip","CommandList","item","key","InputForm","registry","useState","currentQuery","setCurrentQuery","action","method","name","value","onChange","e","target","autoComplete","Home","className","useLocation","URLSearchParams","window","location","search","get","path","pathname","replace","root","App","useMemo","useRegistry","url","startsWith","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df402fa7.chunk.js","sourcesContent":["export const ROOT = `${process.env.PUBLIC_URL || ''}/`;\nexport const HELP = `${ROOT}help`;\nexport const PARAM_QUERY = 'q';\nexport const PARAM_SEARCH = 's';\nexport const PARAM_GH_PERSON = 'person';\nexport const PARAM_GH_REPO = 'repo';\n","import { AppParams, CommandDefinition, CommandFn } from '../types';\nimport { NUMBER, PERSON, REPO } from '.';\n\nconst ASSET = `:asset(pr|issue|i)`;\n\nconst pri = (type: string, plural = false) => {\n  switch (type) {\n    case 'pr':\n      return 'pull';\n    case 'issue':\n    case 'i':\n      return plural ? 'issues' : 'issue';\n    default:\n      return '';\n  }\n};\n\nconst personCommands: CommandFn = () => [\n  {\n    template: `gh ${PERSON}`,\n    toUrl: ({ person }) => `https://github.com/${person}`,\n    example: 'gh johndoe',\n    desc: \"Go to a person's Github profile.\",\n  },\n];\n\nconst me: CommandFn = (person) => [\n  {\n    template: `gh me`,\n    toUrl: () => `https://github.com/${person}`,\n    desc: 'Go to your Github profile.',\n  },\n  {\n    template: `gh i`,\n    toUrl: () =>\n      `https://github.com/issues?q=is%3Aissue+is%3Aopen+author%3A${person}+archived%3Afalse+sort%3Aupdated-desc`,\n    desc: 'Go to your open issues.',\n  },\n  {\n    template: `gh pr`,\n    toUrl: () =>\n      `https://github.com/pulls?q=is%3Apr+is%3Aopen+author%3A${person}+archived%3Afalse+sort%3Aupdated-desc`,\n    desc: 'Go to your open pull requests.',\n  },\n];\n\nconst repoCommands: CommandFn = (repo) => [\n  {\n    template: `gh ${ASSET} ${NUMBER}`,\n    toUrl: ({ asset, number }) =>\n      `https://github.com/${repo}/${pri(asset)}/${number}`,\n    example: 'gh pr|i|issue 123',\n    desc: `Go to an issue or pull request for ${repo} by number.`,\n  },\n  {\n    template: `gh ${NUMBER}`, // GH will resolve if item is a pull\n    toUrl: ({ number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh 123',\n    desc: `Go to an issue or pull request for ${repo} by number.`,\n  },\n  {\n    template: `gh r ${ASSET}`,\n    toUrl: ({ asset }) =>\n      `https://github.com/${repo}/${pri(asset, true)}?q=is%3A${pri(\n        asset,\n      )}+is%3Aopen+sort%3Aupdated-desc`,\n    example: 'gh r pr|i|issue',\n    desc: `Go to open issues or pull requests for ${repo}.`,\n  },\n  {\n    template: `gh r ${NUMBER}`, // GH will resolve if item is a pull\n    toUrl: ({ number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh r 123',\n    desc: `Go to open issues or pull requests for ${repo} by number.`,\n  },\n  {\n    template: `gh r`,\n    toUrl: () => `https://github.com/${repo}`,\n    desc: `Go to ${repo}.`,\n  },\n];\n\nconst standard: CommandFn = () => [\n  {\n    template: `gh ${REPO} ${ASSET} ${NUMBER}`,\n    toUrl: ({ repo, asset, number }) =>\n      `https://github.com/${repo}/${pri(asset, true)}/${number}`,\n    example: 'gh johndoe/repo pr|i|issue 123',\n    desc: \"Go to a repo's Github issue or pull request by number.\",\n  },\n  {\n    template: `gh ${REPO} ${NUMBER}`, // GH will resolve if item is a pull\n    toUrl: ({ repo, number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh johndoe/repo 123',\n    desc: \"Go to a repo's Github issue or pull request by number.\",\n  },\n  {\n    template: `gh ${REPO} ${ASSET}`,\n    toUrl: ({ repo, asset }) =>\n      `https://github.com/${repo}/${pri(asset, true)}?q=is%3A${pri(\n        asset,\n      )}+is%3Aopen+sort%3Aupdated-desc`,\n    example: 'gh johndoe/repo pr|i|issue',\n    desc: \"Go to a repo's Github issues or pull requests.\",\n  },\n  {\n    template: `gh ${REPO}`, // GH will resolve if item is a pull\n    toUrl: ({ repo }) => `https://github.com/${repo}`,\n    example: 'gh johndoe/repo',\n    desc: 'Go to a Github repository.',\n  },\n];\n\nconst basic = () => [\n  {\n    template: `gh`,\n    toUrl: () => `https://github.com`,\n    desc: 'Go to Github.',\n  },\n];\n\nconst all = (params: AppParams['github']): CommandDefinition[] => {\n  let definitions = [...standard(), ...personCommands()];\n\n  if (params?.repo) {\n    definitions = [...repoCommands(params?.repo), ...definitions];\n  }\n\n  if (params?.person) {\n    definitions = [...me(params?.person), ...definitions];\n  }\n\n  return [...definitions, ...basic()];\n};\n\nexport const github = {\n  all,\n  standard,\n  person: personCommands,\n  repo: repoCommands,\n  me,\n  basic,\n};\n","import { match as templateMatch } from 'path-to-regexp';\nimport { CommandRegistry, CommandDefinition } from '../types';\nimport { help } from './help';\n\nexport { github } from './github';\nexport { google } from './google';\nexport { classic } from './classic';\n\nconst options = {\n  delimiter: ' ?',\n};\n\nexport const OPTIONAL_SPACE = '( |$)';\nexport const QUERY = `${OPTIONAL_SPACE}:query(.+)?`;\nexport const PERSON = `:person([a-zA-Z0-9_]+)`;\nexport const REPO = `:repo(\\\\w+\\/\\\\w+)`;\nexport const NUMBER = `:number(\\\\d+)`;\n\nexport const sortCommandDefinitions = (\n  a: CommandDefinition,\n  b: CommandDefinition,\n) =>\n  (a.example || a.template).split(',')[0] <\n  (b.example || b.template).split(',')[0]\n    ? -1\n    : 1;\n\nexport const createRegistry = (\n  definitions: CommandDefinition[],\n): CommandRegistry => {\n  definitions = [...help(), ...definitions];\n\n  const commands = definitions.map(({ template, toUrl, example, desc }) => {\n    const match = templateMatch(template, options);\n\n    return {\n      match,\n      toUrl: (query: string) => {\n        const result = match(query);\n\n        if (result) {\n          return toUrl(result.params as Record<string, string>);\n        }\n\n        return false;\n      },\n      example: example || template,\n      desc,\n    };\n  });\n\n  return {\n    commands,\n    toUrl: (query: string) =>\n      commands.find(({ match }) => match(query))?.toUrl(query) || false,\n  };\n};\n","import { CommandDefinition } from '../types';\nimport { ROOT } from '../constants';\n\nexport const help: () => CommandDefinition[] = () => [\n  {\n    template: ':help(h|help|home)',\n    toUrl: () => ROOT,\n    example: 'h|help|home',\n    desc: 'View how to use bunnyghp.',\n  },\n];\n","/**\n * You can edit this file to add and remove sets of commands.\n */\n\nimport { github, google, classic } from './commands';\n\n// Importing separately until fork is deployed.\nimport { kibana } from './commands/kibana';\nimport { AppParams } from './types';\n\n// Add or remove commands here.\nexport const getDefinitions = (params?: AppParams) => [\n  ...kibana(params?.github?.person), // TODO: remove this when fork is deployed.\n  ...github.all(params?.github),\n  ...google(),\n  ...classic(),\n];\n","// TODO: remove this from this repo when the fork is (hopefully) deployed itself.\n\nimport { CommandDefinition } from '../types';\nimport { QUERY, OPTIONAL_SPACE, NUMBER, sortCommandDefinitions } from '.';\n\nexport const kibana = (person?: string) => {\n  let commands: CommandDefinition[] = [];\n\n  if (person) {\n    commands = [\n      {\n        template: `i${QUERY}`,\n        toUrl: ({ query }) =>\n          `https://github.com/elastic/kibana/issues?q=is%3Aissue+is%3Aopen+assignee%3A${person}+archived%3Afalse+sort%3Aupdated-desc${\n            query ? `+${query}` : ''\n          }`,\n        example: 'i, i flaky test',\n        desc: `Go to open Kibana issues for ${person}, and optionally search.`,\n      },\n      {\n        template: `pr${QUERY}`,\n        toUrl: ({ query }) =>\n          `https://github.com/pulls?q=is%3Apr+is%3Aopen+author%3A${person}+archived%3Afalse+sort%3Aupdated-desc${\n            query ? `+${query}` : ''\n          }`,\n        example: 'pr, pr test fix',\n        desc: `Go to open Kibana pull requests for ${person}, and optionally search.`,\n      },\n      {\n        template: `blockers${OPTIONAL_SPACE}:release?`,\n        toUrl: ({ release }) =>\n          `https://github.com/elastic/kibana/issues?q=is%3Aopen+assignee%3A${person}+sort%3Aupdated-desc+label%3Ablocker${\n            release ? `%2Cv${release}` : ''\n          }`,\n        desc: `View Kibana blocker issues assigned to ${person}, and optionally filter by a release.`,\n        example: 'blockers, blockers 7.15.0',\n      },\n      {\n        template: `k me`,\n        toUrl: () => `https://github.com/${person}/kibana/`,\n        desc: `Go to the main branch of the ${person}/kibana repo.`,\n      },\n    ];\n  }\n\n  commands = [\n    ...commands,\n    {\n      template: `n`,\n      toUrl: () =>\n        `https://github.com/notifications?query=repo%3Aelastic%2Fkibana+is%3Aunread`,\n      desc: 'View unread notifications for elastic/kibana',\n    },\n    {\n      template: `t :team`,\n      toUrl: ({ team }) =>\n        `https://github.com/orgs/elastic/teams/kibana-${team}`,\n      desc: 'Go to a Kibana Team homepage on Github.',\n      example: 't ops, t presentation',\n    },\n    {\n      template: `tl :team`,\n      toUrl: ({ team }) =>\n        `https://github.com/elastic/kibana/labels/Team%3A${team}`,\n      desc: \"Go to a team's issue/pr label.\",\n      example: 'tl, tl presentation',\n    },\n    {\n      template: `k${QUERY}`,\n      toUrl: ({ query }) =>\n        query\n          ? `https://github.com/elastic/kibana/search?q=${query}`\n          : 'https://github.com/elastic/kibana/',\n      desc: `Go to the main branch of the elastic/kibana repo, and optionally search the codebase.`,\n      example: 'k, k toExpression',\n    },\n    {\n      template: `k ${NUMBER}`,\n      // Github will automatically resolve if issue is a pr,, vice versa.\n      toUrl: ({ number }) =>\n        `https://github.com/elastic/kibana/issues/${number}`,\n      example: 'k 24924',\n      desc: `Go to an issue, pull request for Kibana, by number.`,\n    },\n    {\n      template: `k i${QUERY}`,\n      toUrl: ({ query }) =>\n        `https://github.com/elastic/kibana/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc${\n          query ? `+${query}` : ''\n        }`,\n      example: 'k i, k i test failure',\n      desc: `Go to Kibana open issues, and optionally search`,\n    },\n    {\n      template: `k pr${QUERY}`,\n      toUrl: ({ query }) =>\n        `https://github.com/elastic/kibana/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-desc${\n          query ? `+${query}` : ''\n        }`,\n      example: 'k pr, k pr fix failure',\n      desc: `Go to Kibana open pull requests, and optionally search`,\n    },\n    {\n      template: `k blockers${OPTIONAL_SPACE}:release?`,\n      toUrl: ({ release }) =>\n        `https://github.com/elastic/kibana/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3Ablocker${\n          release ? `%2Cv${release}` : ''\n        }`,\n      desc: 'View Kibana blocker issues, and optionally filter by a release.',\n      example: 'k blockers, k blockers 7.15.0',\n    },\n    {\n      template: `cd${QUERY}`,\n      toUrl: ({ query }) =>\n        query\n          ? `https://discuss.elastic.co/tags/c/elastic-stack/kibana/${query}`\n          : 'https://discuss.elastic.co/c/elastic-stack/kibana',\n      desc: 'View recent community discussions, optionally by tag',\n      example: 'cd, cd canvas',\n    },\n    {\n      template: `ci${OPTIONAL_SPACE}:release?`,\n      toUrl: ({ release }) =>\n        `https://kibana-ci.elastic.co/${\n          release ? `job/elastic+kibana+${release}` : ''\n        }`,\n      example: 'ci, ci 7.15',\n      desc: 'Go to CI, and optionally the build for a specific Kibana release.',\n    },\n    {\n      template: `eui`,\n      toUrl: () => `https://github.com/elastic/eui`,\n      desc: 'Go to the main branch of the EUI repository.',\n    },\n    {\n      template: `docs`,\n      toUrl: () =>\n        `https://docs.elastic.dev/kibana-dev-docs/getting-started/welcome`,\n      desc: 'Visit the Kibana Dev Docs.',\n    },\n  ];\n\n  return commands.sort(sortCommandDefinitions);\n};\n","import { CommandDefinition } from '../types';\nimport { QUERY } from '.';\n\nexport const google: () => CommandDefinition[] = () => [\n  {\n    template: `g${QUERY}`,\n    toUrl: ({ query }) =>\n      `https://www.google.com${query ? `/search?q=${query}` : ''}`,\n    example: 'g how to google',\n    desc: 'Search Google, or just go to Google.',\n  },\n];\n","import { CommandDefinition } from '../types';\nimport { OPTIONAL_SPACE, QUERY } from '.';\n\nconst ZIP_CODE = `:zip(\\\\d{5})`;\n\nexport const classic: () => CommandDefinition[] = () => [\n  {\n    template: 'lol',\n    toUrl: () => 'http://icanhascheezburger.com/?random',\n    desc: 'a random lolcat',\n  },\n  {\n    template: 'hoo :query',\n    toUrl: ({ query }) => `http://haskell.org/hoogle/?q=${query}`,\n    example: 'hoo how to hoogle',\n    desc: 'a hoogle (haskell + google) search',\n  },\n  {\n    template: 'rickroll',\n    toUrl: () => 'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n    desc: \"You Just Got Rick Roll'd By bunnyghp!\",\n  },\n  {\n    template: `fb${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.facebook.com/${query ? `s.php?q=${query}&init=q` : ''}`,\n    desc: 'search www.facebook.com or go there',\n    example: 'fb mark zuckerberg',\n  },\n  {\n    template: `yt${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.youtube.com/${\n        query ? `results?search_query=${query}&search_type=&aq=-1&oq=` : ''\n      }`,\n    desc: 'searches YouTube or goes to it',\n    example: \"yt i'm cool sushi 654 yeah\",\n  },\n  {\n    template: `bugcongress${OPTIONAL_SPACE}${ZIP_CODE}?`,\n    toUrl: ({ zip }) =>\n      `http://www.congress.org/congressorg/officials/congress/${\n        zip ? `?lvl=C&azip=${zip}` : ''\n      }`,\n    desc: 'looks up your senator or congressperson based on a zip code you give it, or just view a list',\n    example: 'bugcongress 40207',\n  },\n  {\n    template: `wa${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.wolframalpha.com${query ? `/input/?i=${query}` : ''}`,\n    desc: 'searches Wolfram Alpha or goes there',\n    example: 'wa ultimate question',\n  },\n  {\n    template: `wikinvest${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.wikinvest.com${\n        query ? `/Special/Search?search=%s${query}` : ''\n      }`,\n    desc: 'searches Wikinvest or goes there',\n    example: 'wikinvest 2008 Financial Crisis',\n  },\n  {\n    template: 'time',\n    toUrl: () => 'https://time.is/',\n    desc: 'shows the current time',\n  },\n];\n","import { Command } from '../types';\n\ninterface Props {\n  commands: Command[];\n}\n\nexport const CommandList = ({ commands }: Props) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Command</th>\n          <th>Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        {commands.map((item, key) => (\n          <tr key={'f' + key}>\n            <td key={`dt-${key}`}>\n              <code>{item.example}</code>\n            </td>\n            <td key={`dd-${key}`}>{item.desc}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\nimport { ROOT } from '../constants';\nimport { CommandRegistry } from '../types';\n\ninterface Props {\n  query: string;\n  registry: CommandRegistry;\n}\n\nexport const InputForm = ({ registry, query }: Props) => {\n  const [currentQuery, setCurrentQuery] = useState(query);\n\n  return (\n    <div>\n      <form action={ROOT} method=\"GET\">\n        <input\n          type=\"text\"\n          name=\"q\"\n          value={currentQuery}\n          onChange={(e) => setCurrentQuery(e.target.value)}\n          autoComplete=\"off\"\n        />\n        <input type=\"submit\" />\n      </form>\n      <p>{registry.toUrl(currentQuery) || <br />}</p>\n    </div>\n  );\n};\n","import { CommandList } from '.';\nimport { CommandRegistry } from '../types';\nimport { InputForm } from './input_form';\n\ninterface Props {\n  query: string;\n  registry: CommandRegistry;\n}\n\nexport const Home = ({ registry, query }: Props) => {\n  return (\n    <div>\n      <div className=\"App\">\n        <InputForm {...{ registry, query }} />\n        <CommandList commands={registry.commands} />\n      </div>\n    </div>\n  );\n};\n","import { useMemo } from 'react';\n\nimport {\n  HELP,\n  PARAM_GH_PERSON,\n  PARAM_GH_REPO,\n  PARAM_QUERY,\n  PARAM_SEARCH,\n  ROOT,\n} from './constants';\nimport { createRegistry } from './commands';\nimport { getDefinitions } from './config';\nimport { Home } from './components';\n\nconst useLocation = () => {\n  const params = new URLSearchParams(window.location?.search);\n  const query = params.get(PARAM_QUERY) || '';\n  const search = !!(params.get(PARAM_SEARCH) || false);\n  const repo =\n    params.get(PARAM_GH_REPO) || process.env.REACT_APP_GITHUB_DEFAULT_REPO;\n  const person =\n    params.get(PARAM_GH_PERSON) || process.env.REACT_APP_GITHUB_DEFAULT_PERSON;\n\n  return {\n    path: location.pathname.replace(/\\//g, ''),\n    query,\n    params: {\n      search,\n      github: {\n        repo,\n        person,\n      },\n    },\n  };\n};\n\nconst useRegistry = () => {\n  const { params } = useLocation();\n\n  const registry = useMemo(\n    () => createRegistry(getDefinitions(params)),\n    [params],\n  );\n\n  return registry;\n};\n\nconst root = ROOT.replace(/\\//g, '');\n\nexport const App = () => {\n  const { path, query, params } = useLocation();\n  const registry = useRegistry();\n\n  // All of this feels clunky, but it works for now.\n  if (path === root && query) {\n    const url = registry.toUrl(query);\n\n    // If we match based on the raw query, we can redirect to the URL.\n    if (url) {\n      window.location.replace(url);\n      return null;\n    }\n\n    // If we didn't match, but search by default is enabled, redirect to the\n    // google search match with the full query.\n    if (params.search) {\n      window.location.replace(registry.toUrl(`g ${query}`) || ROOT);\n      return null;\n    }\n\n    // Otherwise, go home.\n    window.location.replace(ROOT);\n    return null;\n  }\n\n  // Feels clunky, but it works.\n  if (path.startsWith(HELP) || path === root) {\n    return <Home {...{ registry, query }} />;\n  }\n\n  // If we don't match anything, go home.\n  window.location.replace(ROOT);\n  return null;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}