{"version":3,"sources":["commands/github.ts","commands/index.ts","config.ts","commands/help.ts","commands/kibana.ts","commands/google.ts","commands/classic.ts","components/command_list.tsx","components/input_form.tsx","components/home.tsx","App.tsx","index.tsx"],"names":["pri","type","plural","ASSET","person","template","PERSON","toUrl","example","desc","me","repo","NUMBER","asset","number","standard","REPO","github","defaultRepo","defaultPerson","definitions","options","delimiter","OPTIONAL_SPACE","QUERY","query","team","release","process","zip","CommandList","commands","map","item","key","InputForm","registry","useState","currentQuery","setCurrentQuery","action","method","name","value","onChange","e","target","autoComplete","Home","className","match","templateMatch","result","params","find","createRegistry","ROOT","App","path","location","pathname","URLSearchParams","window","search","get","useLocation","replace","startsWith","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e70de8c1.chunk.js","sourcesContent":["import { CommandDefinition, CommandFn } from '../types';\nimport { NUMBER, PERSON, REPO } from '.';\n\nconst pri = (type: string, plural = false) => {\n  switch (type) {\n    case 'pr':\n      return 'pull';\n    case 'issue':\n    case 'i':\n      return plural ? 'issues' : 'issue';\n    default:\n      return '';\n  }\n};\n\nconst ASSET = `:asset(pr|issue|i)`;\n\nconst person: CommandFn = () => [\n  {\n    template: `gh ${PERSON}`,\n    toUrl: ({ person }) => `https://github.com/${person}`,\n    example: 'gh johndoe',\n    desc: \"Go to a person's Github profile.\",\n  },\n];\n\nconst me: CommandFn = (person) => [\n  {\n    template: `gh me`,\n    toUrl: () => `https://github.com/${person}`,\n    desc: 'Go to your Github profile.',\n  },\n  {\n    template: `gh i`,\n    toUrl: () =>\n      `https://github.com/issues?q=is%3Aissue+is%3Aopen+author%3A${person}+archived%3Afalse+sort%3Aupdated-desc`,\n    desc: 'Go to your open issues.',\n  },\n  {\n    template: `gh pr`,\n    toUrl: () =>\n      `https://github.com/pulls?q=is%3Apr+is%3Aopen+author%3A${person}+archived%3Afalse+sort%3Aupdated-desc`,\n    desc: 'Go to your open pull requests.',\n  },\n];\n\nconst repo: CommandFn = (repo) => [\n  {\n    template: `gh ${ASSET} ${NUMBER}`,\n    toUrl: ({ asset, number }) =>\n      `https://github.com/${repo}/${pri(asset)}/${number}`,\n    example: 'gh pr|i|issue 123',\n    desc: `Go to an issue or pull request for ${repo} by number.`,\n  },\n  {\n    template: `gh ${NUMBER}`, // GH will resolve if item is a pull\n    toUrl: ({ number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh 123',\n    desc: `Go to an issue or pull request for ${repo} by number.`,\n  },\n  {\n    template: `gh r ${ASSET}`,\n    toUrl: ({ asset }) =>\n      `https://github.com/${repo}/${pri(asset, true)}?q=is%3A${pri(\n        asset,\n      )}+is%3Aopen+sort%3Aupdated-desc`,\n    example: 'gh r pr|i|issue',\n    desc: `Go to open issues or pull requests for ${repo}.`,\n  },\n  {\n    template: `gh r ${NUMBER}`, // GH will resolve if item is a pull\n    toUrl: ({ number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh r 123',\n    desc: `Go to open issues or pull requests for ${repo} by number.`,\n  },\n  {\n    template: `gh r`,\n    toUrl: () => `https://github.com/${repo}`,\n    desc: `Go to ${repo}.`,\n  },\n];\n\nconst standard: CommandFn = () => [\n  {\n    template: `gh ${REPO} ${ASSET} ${NUMBER}`,\n    toUrl: ({ repo, asset, number }) =>\n      `https://github.com/${repo}/${pri(asset, true)}/${number}`,\n    example: 'gh johndoe/repo pr|i|issue 123',\n    desc: \"Go to a repo's Github issue or pull request by number.\",\n  },\n  {\n    template: `gh ${REPO} ${NUMBER}`, // GH will resolve if item is a pull\n    toUrl: ({ repo, number }) => `https://github.com/${repo}/issues/${number}`,\n    example: 'gh johndoe/repo 123',\n    desc: \"Go to a repo's Github issue or pull request by number.\",\n  },\n  {\n    template: `gh ${REPO} ${ASSET}`,\n    toUrl: ({ repo, asset }) =>\n      `https://github.com/${repo}/${pri(asset, true)}?q=is%3A${pri(\n        asset,\n      )}+is%3Aopen+sort%3Aupdated-desc`,\n    example: 'gh johndoe/repo pr|i|issue',\n    desc: \"Go to a repo's Github issues or pull requests.\",\n  },\n  {\n    template: `gh ${REPO}`, // GH will resolve if item is a pull\n    toUrl: ({ repo }) => `https://github.com/${repo}`,\n    example: 'gh johndoe/repo',\n    desc: 'Go to a Github repository.',\n  },\n];\n\nconst basic = () => [\n  {\n    template: `gh`,\n    toUrl: () => `https://github.com`,\n    desc: 'Go to Github.',\n  },\n];\n\nconst all = ({\n  defaultRepo,\n  defaultPerson,\n}: {\n  defaultRepo?: string;\n  defaultPerson?: string;\n}): CommandDefinition[] => {\n  let definitions = [...standard(), ...person()];\n\n  if (defaultRepo) {\n    definitions = [...repo(defaultRepo), ...definitions];\n  }\n\n  if (defaultPerson) {\n    definitions = [...me(defaultPerson), ...definitions];\n  }\n\n  return [...definitions, ...basic()];\n};\n\nexport const github = { all, standard, person, repo, me, basic };\n","import { match as templateMatch } from 'path-to-regexp';\nimport { CommandRegistry, CommandDefinition } from '../types';\n\nexport { github } from './github';\nexport { google } from './google';\nexport { help } from './help';\nexport { classic } from './classic';\n\nconst options = {\n  delimiter: ' ?',\n};\n\nexport const OPTIONAL_SPACE = '( |$)';\nexport const QUERY = `${OPTIONAL_SPACE}:query(.+)?`;\nexport const PERSON = `:person([a-zA-Z0-9_]+)`;\nexport const REPO = `:repo(\\\\w+\\/\\\\w+)`;\nexport const NUMBER = `:number(\\\\d+)`;\n\nexport const createRegistry = (\n  definitions: CommandDefinition[],\n): CommandRegistry => {\n  const commands = definitions.map(({ template, toUrl, example, desc }) => {\n    const match = templateMatch(template, options);\n\n    return {\n      match,\n      toUrl: (query: string) => {\n        const result = match(query);\n\n        if (result) {\n          return toUrl(result.params as Record<string, string>);\n        }\n\n        return false;\n      },\n      example: example || template,\n      desc,\n    };\n  });\n\n  return {\n    commands,\n    toUrl: (query: string) =>\n      commands.find(({ match }) => match(query))?.toUrl(query) || false,\n  };\n};\n","/**\n * You can edit this file to add and remove sets of commands.\n */\n\nimport { github, google, help, classic } from './commands';\n\n// Importing separately until fork is deployed.\nimport { kibana } from './commands/kibana';\n\n// Add or remove commands here.\nexport const definitions = [\n  ...help(),\n  ...kibana(), // TODO: remove this when fork is deployed.\n  ...github.all({\n    // TODO: also allow for local storage\n    defaultPerson: process.env.REACT_APP_GITHUB_DEFAULT_PERSON,\n    defaultRepo: process.env.REACT_APP_GITHUB_DEFAULT_REPO,\n  }),\n  ...google(),\n  ...classic(),\n];\n","import { CommandDefinition } from '../types';\n\nexport const help: () => CommandDefinition[] = () => [\n  {\n    template: ':help(h|help|home)',\n    toUrl: () => `/`,\n    example: 'h|help|home',\n    desc: 'View how to use bunnyghp.',\n  },\n];\n","// TODO: remove this from this repo when the fork is (hopefully) deployed itself.\n\nimport { CommandDefinition } from '../types';\nimport { QUERY, OPTIONAL_SPACE, NUMBER } from '.';\n\nexport const kibana: () => CommandDefinition[] = () => [\n  {\n    template: `${NUMBER}`,\n    // Github will automatically resolve if issue is a pr, or vice versa.\n    toUrl: ({ number }) => `https://github.com/elastic/kibana/issues/${number}`,\n    example: '24924',\n    desc: `Go to an issue or pull request for Kibana, by number.`,\n  },\n  {\n    template: `i${QUERY}`,\n    toUrl: ({ query }) =>\n      `https://github.com/elastic/kibana/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc${\n        query ? `+${query}` : ''\n      }`,\n    example: 'i test failure',\n    desc: `Go to open issues, and optionally search`,\n  },\n  {\n    template: `pr${QUERY}`,\n    toUrl: ({ query }) =>\n      `https://github.com/elastic/kibana/pulls?q=is%3Apr+is%3Aopen+sort%3Aupdated-desc${\n        query ? `+${query}` : ''\n      }`,\n    example: 'pr fix failure',\n    desc: `Go to open pull requests, and optionally search`,\n  },\n  {\n    template: `n`,\n    toUrl: () =>\n      `https://github.com/notifications?query=repo%3Aelastic%2Fkibana+is%3Aunread`,\n    desc: 'View unread notifications for elastic/kibana',\n  },\n  {\n    template: `t :team`,\n    toUrl: ({ team }) => `https://github.com/orgs/elastic/teams/kibana-${team}`,\n    desc: 'Go to a Kibana Team homepage on Github.',\n    example: 't presentation',\n  },\n  {\n    template: `tl :team`,\n    toUrl: ({ team }) =>\n      `https://github.com/elastic/kibana/labels/Team%3A${team}`,\n    desc: \"Go to a team's issue/pr label.\",\n    example: 'tl presentation',\n  },\n  {\n    template: `blockers${OPTIONAL_SPACE}:release?`,\n    toUrl: ({ release }) =>\n      `https://github.com/elastic/kibana/issues?q=is%3Aopen+sort%3Aupdated-desc+label%3Ablocker${\n        release ? `%2Cv${release}` : ''\n      }`,\n    desc: 'View blocker issues, and optionally filter by a release.',\n    example: 'blockers 7.15.0',\n  },\n  {\n    template: `cd${QUERY}`,\n    toUrl: ({ query }) =>\n      query\n        ? `https://discuss.elastic.co/tags/c/elastic-stack/kibana/${query}`\n        : 'https://discuss.elastic.co/c/elastic-stack/kibana',\n    desc: 'View recent community discussions, optionally by tag',\n    example: 'cd canvas',\n  },\n  {\n    template: `ci${OPTIONAL_SPACE}:release?`,\n    toUrl: ({ release }) =>\n      `https://kibana-ci.elastic.co/${\n        release ? `job/elastic+kibana+${release}` : ''\n      }`,\n    example: 'ci 7.15',\n    desc: 'Go to CI, and optionally the build for a specific Kibana release.',\n  },\n  {\n    template: `main`,\n    toUrl: () => `https://github.com/elastic/kibana`,\n    desc: 'Go to the main branch of the Kibana repository.',\n  },\n  {\n    template: `eui`,\n    toUrl: () => `https://github.com/elastic/eui`,\n    desc: 'Go to the main branch of the EUI repository.',\n  },\n  {\n    template: `docs`,\n    toUrl: () =>\n      `https://docs.elastic.dev/kibana-dev-docs/getting-started/welcome`,\n    desc: 'Visit the Kibana Dev Docs.',\n  },\n];\n","import { CommandDefinition } from '../types';\nimport { QUERY } from '.';\n\nexport const google: () => CommandDefinition[] = () => [\n  {\n    template: `g${QUERY}`,\n    toUrl: ({ query }) =>\n      `https://www.google.com${query ? `/search?q=${query}` : ''}`,\n    example: 'g how to google',\n    desc: 'Search Google, or just go to Google.',\n  },\n];\n","import { CommandDefinition } from '../types';\nimport { OPTIONAL_SPACE, QUERY } from '.';\n\nconst ZIP_CODE = `:zip(\\\\d{5})`;\n\nexport const classic: () => CommandDefinition[] = () => [\n  {\n    template: 'lol',\n    toUrl: () => 'http://icanhascheezburger.com/?random',\n    desc: 'a random lolcat',\n  },\n  {\n    template: 'hoo :query',\n    toUrl: ({ query }) => `http://haskell.org/hoogle/?q=${query}`,\n    example: 'hoo how to hoogle',\n    desc: 'a hoogle (haskell + google) search',\n  },\n  {\n    template: 'rickroll',\n    toUrl: () => 'https://www.youtube.com/watch?v=dQw4w9WgXcQ',\n    desc: \"You Just Got Rick Roll'd By bunnyghp!\",\n  },\n  {\n    template: `fb${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.facebook.com/${query ? `s.php?q=${query}&init=q` : ''}`,\n    desc: 'search www.facebook.com or go there',\n    example: 'fb mark zuckerberg',\n  },\n  {\n    template: `yt${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.youtube.com/${\n        query ? `results?search_query=${query}&search_type=&aq=-1&oq=` : ''\n      }`,\n    desc: 'searches YouTube or goes to it',\n    example: \"yt i'm cool sushi 654 yeah\",\n  },\n  {\n    template: `bugcongress${OPTIONAL_SPACE}${ZIP_CODE}?`,\n    toUrl: ({ zip }) =>\n      `http://www.congress.org/congressorg/officials/congress/${\n        zip ? `?lvl=C&azip=${zip}` : ''\n      }`,\n    desc: 'looks up your senator or congressperson based on a zip code you give it, or just view a list',\n    example: 'bugcongress 40207',\n  },\n  {\n    template: `wa${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.wolframalpha.com${query ? `/input/?i=${query}` : ''}`,\n    desc: 'searches Wolfram Alpha or goes there',\n    example: 'wa ultimate question',\n  },\n  {\n    template: `wikinvest${QUERY}`,\n    toUrl: ({ query }) =>\n      `http://www.wikinvest.com${\n        query ? `/Special/Search?search=%s${query}` : ''\n      }`,\n    desc: 'searches Wikinvest or goes there',\n    example: 'wikinvest 2008 Financial Crisis',\n  },\n  {\n    template: 'time',\n    toUrl: () => 'https://time.is/',\n    desc: 'shows the current time',\n  },\n];\n","import { Fragment } from 'react';\nimport { Command } from '../types';\n\ninterface Props {\n  commands: Command[];\n}\n\nexport const CommandList = ({ commands }: Props) => {\n  return (\n    <dl>\n      {commands.map((item, key) => (\n        <Fragment key={'f' + key}>\n          <dt key={`dt-${key}`}>\n            <code>{item.example}</code>\n          </dt>\n          <dd key={`dd-${key}`}>{item.desc}</dd>\n        </Fragment>\n      ))}\n    </dl>\n  );\n};\n","import { useState } from 'react';\nimport { CommandRegistry } from '../types';\n\ninterface Props {\n  query: string;\n  registry: CommandRegistry;\n}\n\nexport const InputForm = ({ registry, query }: Props) => {\n  const [currentQuery, setCurrentQuery] = useState(query);\n\n  return (\n    <div>\n      <form action=\"/\" method=\"GET\">\n        <input\n          type=\"text\"\n          name=\"q\"\n          value={currentQuery}\n          onChange={(e) => setCurrentQuery(e.target.value)}\n          autoComplete=\"off\"\n        />\n        <input type=\"submit\" />\n      </form>\n      <p>{registry.toUrl(currentQuery) || <br />}</p>\n    </div>\n  );\n};\n","import { CommandList } from '.';\nimport { CommandRegistry } from '../types';\nimport { InputForm } from './input_form';\n\ninterface Props {\n  query: string;\n  registry: CommandRegistry;\n}\n\nexport const Home = ({ registry, query }: Props) => {\n  return (\n    <div>\n      <div className=\"App\">\n        <InputForm {...{ registry, query }} />\n        <CommandList commands={registry.commands} />\n      </div>\n    </div>\n  );\n};\n","import { createRegistry } from './commands';\nimport { definitions } from './config';\nimport { Home } from './components';\n\nconst useLocation = () => ({\n  path: location.pathname,\n  query: new URLSearchParams(window.location?.search).get('q') || '',\n});\n\nconst registry = createRegistry(definitions);\nconst ROOT = `${process.env.PUBLIC_URL || ''}/`;\n\nexport const App = () => {\n  const { path, query } = useLocation();\n\n  // All of this feels clunky, but it works for now.\n  if (path === ROOT && query) {\n    window.location.replace(registry.toUrl(query) || '/');\n    return null;\n  }\n\n  // Feels clunky, but it works.\n  if (path.startsWith(`${ROOT}home`) || path === ROOT) {\n    return <Home {...{ registry, query }} />;\n  }\n\n  window.location.replace(ROOT);\n  return null;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}